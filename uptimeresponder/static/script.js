let serverStartTime,lastUpdateTime,uptimeInterval;const formatUptime=t=>{const e=Math.floor(t/1e3),n=Math.floor(e/86400),r=Math.floor(e%86400/3600),a=Math.floor(e%3600/60),o=e%60;return`${n.toString().padStart(2,"0")}:${r.toString().padStart(2,"0")}:${a.toString().padStart(2,"0")}:${o.toString().padStart(2,"0")}`},updateUptime=()=>{const t=Date.now(),e=t-serverStartTime;document.getElementById("uptime").textContent=formatUptime(e)},handleStatusResponse=t=>{const e=parseUptimeString(t.uptime),n=Date.now();if(serverStartTime){const t=n-serverStartTime;Math.abs(e-t)>2e3&&(serverStartTime=n-e)}else serverStartTime=n-e,uptimeInterval=setInterval(updateUptime,1e3);document.getElementById("uptime").textContent=formatUptime(e),document.getElementById("latency").textContent=`${t.latency} ms`,lastUpdateTime=n},fetchStatus=()=>{fetch("/status").then(t=>t.ok?t.json():Promise.reject("Network response was not ok")).then(handleStatusResponse).catch(t=>{console.error("Error fetching status:",t),document.getElementById("latency").textContent="Time out",Date.now()-lastUpdateTime>3e4&&(document.getElementById("uptime").textContent="Time out",clearInterval(uptimeInterval),uptimeInterval=null,serverStartTime=null)})},parseUptimeString=t=>{const[e,n,r,a]=t.split(":").map(Number);return 1e3*(86400*e+3600*n+60*r+a)};document.addEventListener("DOMContentLoaded",()=>{fetchStatus(),setInterval(fetchStatus,1e4)});